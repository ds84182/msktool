import 'dart:typed_data';
import 'package:hkxread/src/parser.dart';
import 'package:test/test.dart';

final testData = new Uint8List.fromList(const <int>[
  1, // uint8, 1
  0x02, 0x00, // uint16, 0x200
  0xAF, 0x00, 0x00, 0x00, // uint32, 0xAF000000
  0xA0, 0xB0, 0xC0, 0xD0, 0xFA, 0xFA, 0xFE, 0xF0, // uint64, 0xA0B0C0D0FAFAFEF0
  0x3F, 0x80, 0x00, 0x00, // float32, 1.0
  0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // float64, 1.0
  0xAB, 0xCD, 0xEF, 0x12, 0x32, // uint8[5], [0xAB, 0xCD, 0xEF, 0x12, 0x32]
  0xAB, 0xCD, 0xEF, 0x12, 0x32, 0xAB,
  0x00, // uint8[zt], [0xAB, 0xCD, 0xEF, 0x12, 0x32, 0xAB]
  0xAB, 0xCD, 0xEF, 0x12, 0x32, 0xAB,
  0x00, // uint8[zt with terminator], [0xAB, 0xCD, 0xEF, 0x12, 0x32, 0xAB, 0x00]
]);

main() {
  test("ByteDataStreamImpl can read test data", () {
    final data = new DataStream.fromTypedData(testData);
    expect(data.offset, 0);
    expect(data.uint8(), 1);
    expect(data.offset, 1);
    expect(data.uint16(), 0x200);
    expect(data.offset, 3);
    expect(data.uint32(), 0xAF000000);
    expect(data.offset, 7);
    expect(data.uint64(), 0xA0B0C0D0FAFAFEF0);
    expect(data.offset, 15);
    expect(data.float32(), 1.0);
    expect(data.offset, 19);
    expect(data.float64(), 1.0);
    expect(data.offset, 27);
    expect(data.uint8list(5), const [0xAB, 0xCD, 0xEF, 0x12, 0x32]);
    expect(data.offset, 32);
    expect(data.zeroTerminatedUint8List(),
        const [0xAB, 0xCD, 0xEF, 0x12, 0x32, 0xAB]);
    expect(data.offset, 39);
    expect(data.zeroTerminatedUint8List(includeTerminator: true),
        const [0xAB, 0xCD, 0xEF, 0x12, 0x32, 0xAB, 0x00]);
    expect(data.offset, 46);
  });
}
